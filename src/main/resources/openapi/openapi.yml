openapi: 3.0.3
info:
  title: Stock Service Microservice
  version: 1.0.0
  description: Stock APIs for managing Stock.

servers:
  - url: http://localhost:8080/api/v1

security:
  - bearerAuth: [ ]

paths:
  /auth/login:
    post:
      summary: Login user and get access token
      tags:
        - ServiceAuth
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        '401':
          description: Invalid credential
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginCredentialErrorResponse'
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - ServiceAuth
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Request contains incorrect syntax or cannot be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                title: "invalid-request"
                detail: "Invalid values sent in the request"
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 409
                title: "conflict"
                detail: "Username already exists"
  /stock/adjust:
    post:
      summary: Adjust stock
      operationId: stockAdjust
      tags:
        - Stock
      description: Allows registering stock adjustments (inputs or outputs).
      requestBody:
        description: Data required to adjust the stock
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustStockRequest'
      responses:
        '200':
          description: Adjustment successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
        '400':
          description: Request error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stock/{productId}:
    get:
      tags:
        - Stock
      summary: Get available stock
      operationId: getStock
      description: Returns the current stock quantity for a specific product.
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: string
            example: "12345"
      responses:
        '200':
          description: Available stock quantity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /stock/{productId}/history:
    get:
      tags:
        - Stock
      summary: Get movement history
      operationId: stockHistory
      description: Returns the stock movement history for a specific product.
      parameters:
        - name: productId
          in: path
          required: true
          description: Product ID
          schema:
            type: string
            example: "12345"
      responses:
        '200':
          description: Movement history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementHistoryItem'
        '404':
          description: Product not found or no history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    AdjustStockRequest:
      type: object
      required:
        - productId
        - quantity
        - movementType
      properties:
        productId:
          type: string
          description: Product ID
          example: "12345"
        quantity:
          type: integer
          description: Quantity to adjust
          example: 10
        movementType:
          type: string
          description: Adjustment type (IN for input, OUT for output)
          enum:
            - IN
            - OUT
          example: "IN"
    StockResponse:
      type: object
      properties:
        productId:
          type: string
          description: Product ID
          example: "12345"
        stock:
          type: integer
          description: Available quantity
          example: 100
    MovementHistoryItem:
      type: object
      properties:
        productId:
          type: string
          description: Product ID
          example: "12345"
        quantity:
          type: integer
          description: Adjusted quantity
          example: 10
        type:
          type: string
          description: Movement type ("IN" for input, "OUT" for output)
          enum:
            - IN
            - OUT
          example: "IN"
        timestamp:
          type: string
          description: Date and time of the movement
          example: "2025-05-01T03:34:59"
    ErrorResponse:
      type: object
      required:
        - code
        - title
        - detail
      properties:
        code:
          description: "A number that represents a type of errors, grouping those of similar characteristics"
          type: integer
        title:
          description: "A identifier for the error code"
          type: string
        detail:
          description: "A description of the error"
          type: string
    AuthenticationRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
        expiresIn:
          type: integer
    LoginCredentialErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    UserRegistrationRequest:
      type: object
      properties:
        username:
          type: string
          description: The unique username of the user
          minLength: 4
          maxLength: 50
          example: johndoe
        password:
          type: string
          description: The password of the user
          example: P@ssw0rd
        roles:
          type: array
          items:
            type: string
          description: The roles assigned to the user
          example: [ "USER" ]
      required:
        - username
        - password
    UserResponse:
      type: object
      properties:
        username:
          type: string
          description: The unique username of the user
          example: johndoe
        roles:
          type: array
          items:
            type: string
          description: The roles assigned to the user
          example: [ "USER" ]
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
